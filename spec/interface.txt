Speculated mod interface, to be updated as it's developed.
Don't take this as the final word, but a general idea of what's to come.

sandblox (global game settings)
	- version

game (game session settings)
	- world (class World)
		- name
		- seed
		- chunks (loaded world chunks)
		- time (the time of day in the world)
		- daylen (the length of day in the world)
		- gravity

input (game input)
	- bind(eventname,callback) (bind the given callback to the given event)
	- unbind(eventname) (unbind this mod's hook on the event)

player (player user access)
	- player (class Player)
		- name
		- dna (class DNA)
			- species() (return a list of species the DNA supports)
			- attr(a) (returns a list of all species definitions of an attribute)
				+ species scoping supported like this: "species:attr"
			- __getitem__(x) (the same as attr)
			- attrs(species) (returns a list of all attributes a species defines)
		- x, y, z
		- xspeed, yspeed, zspeed
		- speed
		- rotation
		- asimuth
		- inventory (list of items the player is carrying)
		- extra (a dictionary of extra persistent data set by the mod, like life)

overlay (access to the 2D overlay)
	- class Color
	- class Image
		- __init__(fname) (note: this must be in the mod resources)
		- __init__(x,y,color=Color.transparent) (proportions are limited)
		- load(fname)
		- hflip()
		- vflip()
		- rotate(angle)
		- scale(by)
		- crop(x1,y1,x2,y2)
		- floodfill(x,y,color,tolerance=0.0)
		- get(x,y), __getitem__ (image[x,y])
		- set(x,y,color), __setitem__ (image[x,y]=z)
		- drawline(x1,y1,x2,y2,color)
		- drawcircle(x,y,r,line,fill)
		- drawrect(x1,y1,x2,y2,line,fill)
		- drawcurve(...)?
		- drawshape(points,fill,pinch=False)
			+ points should be an array of tuples, (x,y,line)
		- drawimage(x,y,image)
	- overlay (class Overlay)
		- draw(x,y,image)
		- clear() (note that this can only clear what the mod has drawn)
		- clear(x1,y1,x2,y2) (clear the given section of this mod's overlay)

map (utilities for map manipulation and generation)
	- class Block
		- name
		- description
		- light
		- gravity
	- class Structure (defining static structures)
		- get(x,y,z)
		- set(x,y,z,block)
		- setarea(x1,y1,z1,x2,y2,z2,block) (use this whenever possible)
	- blocks (list of blocks)
	- map (class Map) (this is only available when the code is called for map generation)
		- get(x,y,z)
		- set(x,y,z,block)
		- setarea(x1,y1,z1,x2,y2,z2,block) (use this whenever possible)
		- createstruct(x,y,z,structure)